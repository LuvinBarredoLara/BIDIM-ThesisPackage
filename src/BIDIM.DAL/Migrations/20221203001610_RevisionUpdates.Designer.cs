// <auto-generated />
using System;
using BIDIM.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BIDIM.DAL.Migrations
{
    [DbContext(typeof(BIDIMDbContext))]
    [Migration("20221203001610_RevisionUpdates")]
    partial class RevisionUpdates
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BIDIM.Domain.Models.AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AuditDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AuditName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Module")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObjectData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Operation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("BIDIM.Domain.Models.Case", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IndividualId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("InfectiousDiseaseId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Outcome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OutcomeDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Guid");

                    b.HasIndex("IndividualId");

                    b.HasIndex("InfectiousDiseaseId");

                    b.ToTable("Cases");
                });

            modelBuilder.Entity("BIDIM.Domain.Models.CaseMonitoring", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("CaseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symptoms")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CaseId");

                    b.ToTable("CaseMonitorings");
                });

            modelBuilder.Entity("BIDIM.Domain.Models.Household", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Brgy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CityMun")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FamilyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<double>("Lat")
                        .HasColumnType("float");

                    b.Property<double>("Long")
                        .HasColumnType("float");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Households");
                });

            modelBuilder.Entity("BIDIM.Domain.Models.Individual", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DoB")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HouseholdId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeceasedByDisease")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HouseholdId");

                    b.ToTable("Individuals");
                });

            modelBuilder.Entity("BIDIM.Domain.Models.InfectiousDisease", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InfectiousDiseases");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Name = "Covid-19"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            Name = "Dengue"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            Name = "Tuberculosis"
                        });
                });

            modelBuilder.Entity("BIDIM.Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserTypeId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("748637d7-c54d-4435-b6da-0367f3a280b3"),
                            FirstName = "System",
                            IsActive = true,
                            LastName = "System",
                            PasswordHash = "$2b$10$lcxOgiMwJgAir21oS1E4N.CpCq8aeIrADP4oDT4MOJTZtRf/A/.Qi",
                            UserTypeId = 1,
                            Username = "System"
                        },
                        new
                        {
                            Id = new Guid("b567f998-8920-430c-8106-c74a2c909ba4"),
                            FirstName = "Test Admin",
                            IsActive = true,
                            LastName = "User",
                            PasswordHash = "$2b$10$hh2f6Ik0S4d71Fe57c3Bc.reN80muw/nN7BbuRPi3UKE3n2XIZS3G",
                            UserTypeId = 2,
                            Username = "testadmin"
                        },
                        new
                        {
                            Id = new Guid("188d9077-cfaa-450c-b76a-331625a574c6"),
                            FirstName = "Test User",
                            IsActive = true,
                            LastName = "User",
                            PasswordHash = "$2b$10$WMRMXn874oi89w08S75fuuAdhaVIdRpPi6h2bNU0j.V0FJrarEdzi",
                            UserTypeId = 3,
                            Username = "testuser"
                        },
                        new
                        {
                            Id = new Guid("9ed22e78-48d1-4d3f-8c8a-7054ab2cd46e"),
                            FirstName = "Test Guest",
                            IsActive = true,
                            LastName = "User",
                            PasswordHash = "$2b$10$0pJGfVGmnGtFEBeGbNsAMOL.P2JKwi2HRf5qaaX6bCnjFxDiFzSgu",
                            UserTypeId = 4,
                            Username = "testguest"
                        });
                });

            modelBuilder.Entity("BIDIM.Domain.Models.UserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Name = "SuperAdmin"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            Name = "User"
                        },
                        new
                        {
                            Id = 4,
                            IsActive = true,
                            Name = "Guest"
                        });
                });

            modelBuilder.Entity("BIDIM.Domain.Models.Case", b =>
                {
                    b.HasOne("BIDIM.Domain.Models.Individual", "Individual")
                        .WithMany("Cases")
                        .HasForeignKey("IndividualId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BIDIM.Domain.Models.InfectiousDisease", "InfectiousDisease")
                        .WithMany("Cases")
                        .HasForeignKey("InfectiousDiseaseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Individual");

                    b.Navigation("InfectiousDisease");
                });

            modelBuilder.Entity("BIDIM.Domain.Models.CaseMonitoring", b =>
                {
                    b.HasOne("BIDIM.Domain.Models.Case", "Case")
                        .WithMany("CaseMonitorings")
                        .HasForeignKey("CaseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Case");
                });

            modelBuilder.Entity("BIDIM.Domain.Models.Individual", b =>
                {
                    b.HasOne("BIDIM.Domain.Models.Household", "Household")
                        .WithMany("Members")
                        .HasForeignKey("HouseholdId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Household");
                });

            modelBuilder.Entity("BIDIM.Domain.Models.User", b =>
                {
                    b.HasOne("BIDIM.Domain.Models.UserType", "UserType")
                        .WithMany("Users")
                        .HasForeignKey("UserTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UserType");
                });

            modelBuilder.Entity("BIDIM.Domain.Models.Case", b =>
                {
                    b.Navigation("CaseMonitorings");
                });

            modelBuilder.Entity("BIDIM.Domain.Models.Household", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("BIDIM.Domain.Models.Individual", b =>
                {
                    b.Navigation("Cases");
                });

            modelBuilder.Entity("BIDIM.Domain.Models.InfectiousDisease", b =>
                {
                    b.Navigation("Cases");
                });

            modelBuilder.Entity("BIDIM.Domain.Models.UserType", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
